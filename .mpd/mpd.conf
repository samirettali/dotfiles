music_directory    "~/Music"
playlist_directory "~/Music/Playlists"
db_file            "~/.mpd/database"
log_file           "~/.mpd/log"
state_file            "~/.mpd/state"

#
# The location of the sticker database.  This is a database which
# manages dynamic information attached to songs.
#
#sticker_file            "~/.mpd/sticker.sql"
#
###############################################################################

#user                "nobody"
#group                "nogroup"
# For network
#bind_to_address        "any"
#bind_to_address        "~/.mpd/socket"
#port                "6600"
#log_level            "notice"
#
# Setting "restore_paused" to "yes" puts MPD into pause mode instead
# of starting playback after startup.
#
#restore_paused "no"
#
# This setting enables MPD to create playlists in a format usable by other
# music players.
#
#save_absolute_paths_in_playlists    "no"
#
# This setting defines a list of tag types that will be extracted during the
# audio file discovery process. The complete list of possible values can be
# found in the user manual.
#metadata_to_use    "artist,album,title,track,name,genre,date,composer,performer,disc"
#
# This example just enables the "comment" tag without disabling all
# the other supported tags:
#metadata_to_use "+comment"
#
# This setting enables automatic update of MPD's database when files in 
# music_directory are changed.
#
#auto_update    "yes"
#
# Limit the depth of the directories being watched, 0 means only watch
# the music directory itself.  There is no limit by default.
#
#auto_update_depth "3"
#
###############################################################################


# Symbolic link behavior ######################################################
#
# If this setting is set to "yes", MPD will discover audio files by following 
# symbolic links outside of the configured music_directory.
#
#follow_outside_symlinks    "yes"
#
# If this setting is set to "yes", MPD will discover audio files by following
# symbolic links inside of the configured music_directory.
#
#follow_inside_symlinks        "yes"
#
###############################################################################


# Zeroconf / Avahi Service Discovery ##########################################
#
# If this setting is set to "yes", service information will be published with
# Zeroconf / Avahi.
#
#zeroconf_enabled        "yes"
#
# The argument to this setting will be the Zeroconf / Avahi unique name for
# this MPD server on the network. %h will be replaced with the hostname.
#
#zeroconf_name            "Music Player @ %h"
#
###############################################################################


# Permissions #################################################################
#
# If this setting is set, MPD will require password authorization. The password
# setting can be specified multiple times for different password profiles.
#
#password                        "password@read,add,control,admin"
#
# This setting specifies the permissions a user has who has not yet logged in. 
#
#default_permissions             "read,add,control,admin"
#
###############################################################################


# Database #######################################################################
#

#database {
#       plugin "proxy"
#       host "other.mpd.host"
#       port "6600"
#}

# Input #######################################################################
#

input {
        plugin "curl"
#       proxy "proxy.isp.com:8080"
#       proxy_user "user"
#       proxy_password "password"
}

#
###############################################################################

# Audio Output ################################################################
#
# MPD supports various audio output types, as well as playing through multiple 
# audio outputs at the same time, through multiple audio_output settings 
# blocks. Setting this block is optional, though the server will only attempt
# autodetection for one sound card.
#
# An example of an ALSA output:
#
#audio_output {
#    type        "alsa"
#    name        "My ALSA Device"
##    device        "hw:0,0"    # optional
##    mixer_type      "hardware"    # optional
##    mixer_device    "default"    # optional
##    mixer_control    "PCM"        # optional
##    mixer_index    "0"        # optional
#}
#
# An example of an OSS output:
#
#audio_output {
#    type        "oss"
#    name        "My OSS Device"
##    device        "/dev/dsp"    # optional
##    mixer_type      "hardware"    # optional
##    mixer_device    "/dev/mixer"    # optional
##    mixer_control    "PCM"        # optional
#}
#
# An example of a shout output (for streaming to Icecast):
#
#audio_output {
#    type        "shout"
#    encoder        "vorbis"        # optional
#    name        "My Shout Stream"
#    host        "localhost"
#    port        "8000"
#    mount        "/mpd.ogg"
#    password    "hackme"
#    quality        "5.0"
#    bitrate        "128"
#    format        "44100:16:1"
##    protocol    "icecast2"        # optional
##    user        "source"        # optional
##    description    "My Stream Description"    # optional
##    url        "http://example.com"    # optional
##    genre        "jazz"            # optional
##    public        "no"            # optional
##    timeout        "2"            # optional
##    mixer_type      "software"        # optional
#}
#
# An example of a recorder output:
#
#audio_output {
#    type        "recorder"
#    name        "My recorder"
#    encoder        "vorbis"        # optional, vorbis or lame
#    path        "/var/lib/mpd/recorder/mpd.ogg"
##    quality        "5.0"            # do not define if bitrate is defined
#    bitrate        "128"            # do not define if quality is defined
#    format        "44100:16:1"
#}
#
# An example of a httpd output (built-in HTTP streaming server):
#
#audio_output {
#    type        "httpd"
#    name        "My HTTP Stream"
#    encoder        "vorbis"        # optional, vorbis or lame
#    port        "8000"
#    bind_to_address    "0.0.0.0"        # optional, IPv4 or IPv6
##    quality        "5.0"            # do not define if bitrate is defined
#    bitrate        "128"            # do not define if quality is defined
#    format        "44100:16:1"
#    max_clients    "0"            # optional 0=no limit
#}
#
# An example of a pulseaudio output (streaming to a remote pulseaudio server)
#
#audio_output {
#    type        "pulse"
#    name        "My Pulse Output"
##    server        "remote_server"        # optional
##    sink        "remote_server_sink"    # optional
##    media_role    "media_role"        #optional
#}
#
# An example of a winmm output (Windows multimedia API).
#
#audio_output {
#    type        "winmm"
#    name        "My WinMM output"
##    device        "Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#        or
##    device        "0"        # optional
##    mixer_type    "hardware"    # optional
#}
#
# An example of a wasapi output (Windows multimedia API).
#
#audio_output {
#    type        "wasapi"
#    name        "My WASAPI output"
##    device        "Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#        or
##    device        "0"        # optional
## Exclusive mode blocks all other audio source, and get best audio quality without resampling.
##    exclusive    "no"        # optional
## Enumerate all devices in log.
##    enumerate    "no"        # optional
#}
#
# An example of an openal output.
#
#audio_output {
#    type        "openal"
#    name        "My OpenAL output"
##    device        "Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#}
#
# An example of an sndio output.
#
#audio_output {
#    type        "sndio"
#    name        "sndio output"
#    mixer_type    "hardware"
#}
#
# An example of an OS X output:
#
#audio_output {
#    type        "osx"
#    name        "My OS X Device"
##    device        "Built-in Output"    # optional
##    channel_map      "-1,-1,0,1"    # optional
#}
#
## Example "pipe" output:
#
#audio_output {
#    type        "pipe"
#    name        "my pipe"
#    command        "aplay -f cd 2>/dev/null"
## Or if you're want to use AudioCompress
#    command        "AudioCompress -m | aplay -f cd 2>/dev/null"
## Or to send raw PCM stream through PCM:
#    command        "nc example.org 8765"
#    format        "44100:16:2"
#}
#
## An example of a null output (for no audio output):
#
#audio_output {
#    type        "null"
#    name        "My Null Output"
#    mixer_type      "none"            # optional
#}
#
###############################################################################


# Normalization automatic volume adjustments ##################################
#
# This setting specifies the type of ReplayGain to use. This setting can have
# the argument "off", "album", "track" or "auto". "auto" is a special mode that
# chooses between "track" and "album" depending on the current state of
# random playback. If random playback is enabled then "track" mode is used.
# See <http://www.replaygain.org> for more details about ReplayGain.
# This setting is off by default.
#
#replaygain            "album"
#
# This setting sets the pre-amp used for files that have ReplayGain tags. By
# default this setting is disabled.
#
#replaygain_preamp        "0"
#
# This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
# By default this setting is disabled.
#
#replaygain_missing_preamp    "0"
#
# This setting enables or disables ReplayGain limiting.
# MPD calculates actual amplification based on the ReplayGain tags
# and replaygain_preamp / replaygain_missing_preamp setting.
# If replaygain_limit is enabled MPD will never amplify audio signal
# above its original level. If replaygain_limit is disabled such amplification
# might occur. By default this setting is enabled.
#
#replaygain_limit        "yes"
#
# This setting enables on-the-fly normalization volume adjustment. This will
# result in the volume of all playing audio to be adjusted so the output has 
# equal "loudness". This setting is disabled by default.
#
#volume_normalization        "no"
#
###############################################################################

# Character Encoding ##########################################################
#
# If file or directory names do not display correctly for your locale then you 
# may need to modify this setting.
#
#filesystem_charset        "UTF-8"
#
###############################################################################
