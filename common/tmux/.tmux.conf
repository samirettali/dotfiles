# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a

# Mantain path in new splits/panes
unbind c
bind c new-window -c '#{pane_current_path}'

# Horizontal splitting
unbind '"'
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -fv -c '#{pane_current_path}'

# Verical splitting
unbind %
bind \\ split-window -h -c '#{pane_current_path}'
bind | split-window -fh -c '#{pane_current_path}'

# Move windows
bind-key -r '<' swap-window -d -t '{previous}'
bind-key -r '>' swap-window -d -t '{next}'

# Resize panes
bind -r H resize-pane -L "5"
bind -r J resize-pane -D "5"
bind -r K resize-pane -U "5"
bind -r L resize-pane -R "5"

bind l next-layout

bind r source-file ~/.tmux.conf

# clear buffer
bind s clear-history

# change tmux root to current directory
unbind .
bind . attach -c "#{pane_current_path}"

unbind m
bind m command-prompt "move-window -t '%%'"

bind C-a last-window

# execute last command in last selected split
bind b select-pane -t 2 \; send-keys Up C-m \; last-pane
bind y select-window -t 2 \; send-keys Up C-m \;

# vim visual mode and copy
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# move panes windows: <prefix> s, <prefix> j
bind j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind s command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind Enter break-pane
bind Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# sync panes
bind S set-window-option synchronize-panes

# settings
set set-clipboard on
set -g base-index 1
set -s escape-time 0
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
setw -g pane-base-index 1
setw -g mode-keys vi
set -g renumber-windows on
set-option -g allow-rename off
set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"
set-option -g default-shell /bin/zsh

# Settings from tmux-sensible
set -g history-limit 50000
set -g display-time 4000
set -g mouse on
# set -g default-command "reattach-to-user-namespace -l $SHELL" # test if needed
set -g focus-events on
setw -g aggressive-resize on

# Disable prefix with F12 to use nested tmux inside ssh session
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-right "OFF" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u status-right \;\
  set -u key-table \;\
  refresh-client -S

# Theme
# set -g status-justify left
set -g status-style "bg=colour234"
# set -g window-style ""

set -g status-fg 3
set -g status-left "#[fg=red, bold]#S "
set -g status-left-length 20

set -g status-right "#[fg=green, bold]$USER@#H"
set -g status-right-length 20

set -g window-status-current-style "bold fg=yellow"
set -g window-status-style "fg=colour242"
set -g window-status-format " #I:#W "
set -g window-status-current-format " #I:#W "
set -g window-status-separator " "

set -g pane-active-border-style "fg=yellow"
set -g pane-border-style "fg=colour242"

# Remember to check every now and then the repo if something changed.
# Only way to get rid of TPM.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
